ometa BSParser {
  compilationUnit = (module | object):cu
                                     -> [`compUnit, cu],
  module          = "module" nqstring:mname "{"  
                       (object | mdecls)+:mbody
                    "}"              -> [`module, mname, mbody],
                    
  object          = "object" nqstring:n "{" odecls:ods "}" 
                                     -> [`object, n, ods],
  mdecls          = mdecl+,
  mdecl           = (("private" | "public"):vis)* memberDecl:md
                                     -> [vis == undefined? `public : vis, md],
  odecls          = odecl+,
  odecl           = (("private" | "protected" | "public"):vis)* memberDecl:md
                                     -> [vis == undefined? `private : vis, md],
  
  memberDecl      = (methodDecl | varDecl):md
                                     -> md,
  methodDecl      = "function" nqstring:mname "()" "{" body:b "}"
                                     -> [`method, mname, b],
  
  varDecl         = listOf('varInit', ","):vi ";"
                                     -> [`var, vi],
  varInit         = varname:vn ("=" text:val)?
                                     -> [vn,val],
  body            = text:b           -> b,
  
  varname         = nqstring:s       -> s,

  name            = text,
  text            = spaces (qstring | nqstring):s
                                     -> s,
  
  //this takes care of comments too. copied from bs-ometa-compiler.txt
  space           = ^space |fromTo('//','\n') | fromTo('/*','*/'), 
  qstring         = fromTo('"','"'),
  // fix this later: uses spaces in front
  nqstring        = spaces ('_' | '.' | letterOrDigit)+:ls
  
                                     -> (ls.join(''))  
}